stages:
  - update
  - build
  - test

variables:
  TEST_SUITE:
    description: "Select test suite to run"
    value: "quicktest"
    options:
      - "quicktest"
      - "main"
      - "rtlsim"
      - "end2end"
      - "full"
  CPU_CORES:
    description: "Select number of CPU cores and test workers"
    value: "8"
  SLURM_TIMEOUT:
    value: "0-24" # [days-hours]

workflow:
  rules:
    # Special handling for TEST_SUITE value "quicktest"
    - if: $TEST_SUITE == "quicktest"
      variables:
        TEST_SUITE: '' # Override with empty string to trigger default = quicktest in quicktest.py
        SLURM_TIMEOUT: "0-1" # Reduce timeout to 1 hour
    # Run pipeline for all default sources
    - when: always

Sync main/dev:
  id_tokens:
    CI_JOB_JWT:
      aud: https://git.uni-paderborn.de
  stage: update
  tags:
    # Run where full Docker + Singularity is available
    - image_build
  rules:
    # Only run on a schedule
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - mkdir ../github_clone && cd ../github_clone
    - git clone https://github.com/fpjentzsch/finn.git && cd finn
    - git remote add upstream https://github.com/Xilinx/finn.git
    - git checkout main
    - git pull upstream/main
    - git checkout dev
    - git pull upstream/dev
    - git checkout feature/n2_ci
    - git pull --rebase upstream/dev
    - git push origin main dev feature/n2_ci

Singularity Image Build:
  id_tokens:
    CI_JOB_JWT:
      aud: https://git.uni-paderborn.de
  stage: build
  tags:
    # Run where full Docker + Singularity is available
    - image_build
  rules:
    # Do not run on a schedule
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    # Only run if relevant files changed
    - changes:
      - requirements.txt
      - docker/Dockerfile.finn
      - docker/finn_entrypoint.sh
      - docker/quicktest.sh
  before_script:
    - FINN_SHA_SHORT=$(git rev-parse --short HEAD)
  script:
    - docker build --no-cache -f docker/Dockerfile.finn --tag=finn_docker_export .
    - apptainer build finn_singularity_image.sif docker-daemon://finn_docker_export:latest
    - cp finn_singularity_image.sif $PATH_SINGULARITY_IMG_BUILD/xilinx/finn_dev.sif
    - cp finn_singularity_image.sif $PATH_SINGULARITY_IMG_BUILD/xilinx/finn_$FINN_SHA_SHORT.sif
  after_script: # Clean caches
    - echo 'y' | docker image prune
    - echo 'y' | docker builder prune
    - echo 'y' | apptainer cache clean

FINN Test Suite:
  id_tokens:
    CI_JOB_JWT:
      aud: https://git.uni-paderborn.de
  stage: test
  rules:
    # Do not run on a schedule
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
  variables:
    SCHEDULER_PARAMETERS: "-A $PROJECT_ACCOUNT -p normal -t $SLURM_TIMEOUT --nodes 1 --ntasks 1 --cpus-per-task $CPU_CORES --mem 128G"
    PYTEST_PARALLEL: "$CPU_CORES"
    FINN_SINGULARITY: "$PATH_SINGULARITY_IMG/xilinx/finn_dev.sif"
  before_script:
    - cp -dfR .. $PATH_WORKDIR # Copy to working directory (e.g. RAMdisk)
    - cd $PATH_WORKDIR/finn
    - module load system singularity
  script:
    - ./run-docker.sh quicktest.sh $TEST_SUITE
